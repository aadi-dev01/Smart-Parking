{"version":3,"sources":["images/cafe.jpg","components/navbar.js","components/footer.js","components/Table.js","components/contactus.jsx","components/home.js","components/main.js","components/book.js","components/thankYou.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Navbar","class","id","href","src","alt","footer","props","className","Col","empty","onClick","_","selectTable","name","console","log","Row","noGutters","chairs","i","Math","ceil","push","key","getRow1","chairs2","floor","getRow2","ContactUs","allowFullScreen","loading","referrerPolicy","action","method","type","placeholder","cols","rows","value","Home","Carousel","Item","interval","Caption","to","Button","navigation","useNavigate","useState","totalTables","setTotalTables","table","date","Date","time","location","size","selection","setSelection","phone","email","booking","setBooking","locations","times","reservationError","setReservationError","getDate","getMonth","getFullYear","slice","getEmptyTables","filter","isAvailable","length","useEffect","a","async","datetime","fetch","headers","body","JSON","stringify","res","json","tables","capacity","table_name","table_id","xs","sm","Input","bsSize","onChange","e","target","color","text","reserve","required","toISOString","split","isNaN","newSel","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","right","newTimes","forEach","DropdownItem","getTimes","newLocations","loc","getLocations","Table","_id","getTables","Boolean","window","hostname","match","ReactDOM","render","setPage","exact","path","element","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c7e922b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cafe.d344861c.jpg\";","import React from \"react\";\r\n// import { Navbar, NavbarBrand } from \"reactstrap\";\r\nimport \"./nav.css\"\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div>\r\n      <header class=\"header\">\r\n\r\n        <div id=\"menu-btn\" class=\"fas fa-bars\"></div>\r\n\r\n        <div class=\"logo\">\r\n          <a href=\"#\" />\r\n          <img class=\"logo\" src=\"NLogo.png\" alt=\"logo\" />\r\n        </div>\r\n\r\n\r\n        <nav class=\"navbar\">\r\n          <a href=\"#home\">home</a>\r\n          <a href=\"#services\">services</a>\r\n          <a href=\"#contact\">contact</a>\r\n        </nav>\r\n\r\n\r\n      </header>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function footer(){\r\n    return(\r\n        <div>\r\n            <footer class=\"footer-distributed\">\r\n\r\n<div class=\"footer-left\">\r\n    <h3>Smart<span>Park</span></h3>\r\n\r\n    <p class=\"footer-links\">\r\n        <a href=\"#home\">Home</a>\r\n        |\r\n        <a href=\"#\">About</a>\r\n        |\r\n        <a href=\"#contact\">Contact</a>\r\n        |\r\n        <a href=\"#services\">Services</a>\r\n    </p>\r\n\r\n    <p class=\"footer-company-name\">Copyright © 2021 <strong>Smart Park</strong> All rights reserved</p>\r\n</div>\r\n\r\n<div class=\"footer-center\">\r\n    <div>\r\n        <i class=\"fa fa-map-marker\"></i>\r\n        <p><span>Bittan Market</span>\r\n            Bhopal</p>\r\n    </div>\r\n\r\n    <div>\r\n        <i class=\"fa fa-phone\"></i>\r\n        <p>+91 6263881030</p>\r\n    </div>\r\n    <div>\r\n        <i class=\"fa fa-envelope\"></i>\r\n        <p><a href=\"mailto:sagar00001.co@gmail.com\">xyz@gmail.com</a></p>\r\n    </div>\r\n</div>\r\n<div class=\"footer-right\">\r\n    <p class=\"footer-company-about\">\r\n        <span>About the company</span>\r\n        <strong>Smart park</strong> is a online parking slot booking website \r\n        and\r\n        Effects \r\n    </p>\r\n    <div class=\"footer-icons\">\r\n        <a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-youtube\"></i></a>\r\n    </div>\r\n</div>\r\n</footer>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport default props => {\r\n  const getRow1 = _ => {\r\n    let chairs = [];\r\n    for (var i = 0; i < Math.ceil(props.chairs / 2); i++) {\r\n      chairs.push(\r\n        <span\r\n          key={i}\r\n          className={props.empty ? \"empty-table\" : \"full-table\"}\r\n        ></span>\r\n      );\r\n    }\r\n    return chairs;\r\n  };\r\n  const getRow2 = _ => {\r\n    let chairs2 = [];\r\n    for (var i = 0; i < Math.floor(props.chairs / 2); i++) {\r\n      chairs2.push(\r\n        <span\r\n          key={i}\r\n          className={props.empty ? \"empty-table\" : \"full-table\"}\r\n        ></span>\r\n      );\r\n    }\r\n    return chairs2;\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <Col\r\n        className={props.empty ? \"table selectable-table\" : \"table\"}\r\n        onClick={_ => {\r\n          props.empty\r\n            ? props.selectTable(props.name, props.id)\r\n            : console.log(\"Tried to select a full table\");\r\n        }}\r\n      >\r\n        <Row noGutters className=\"table-row\">\r\n          <Col className=\"text-center\">{getRow1()}</Col>\r\n        </Row>\r\n        <Row noGutters className=\"table-row\">\r\n          <Col className=\"text-center\">{getRow2()}</Col>\r\n        </Row>\r\n\r\n        <p className=\"text-center table-name\">{props.name}</p>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react'\r\n\r\nconst ContactUs = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"heading\"><span>contact</span> us</h1>\r\n\r\n            <div className=\"row\">\r\n\r\n                <iframe className=\"map\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d29377.52082772077!2d76.70488161732983!3d23.016791186422694!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x397cc4b009806707%3A0x6268c8eb24800dc1!2sAshta%2C%20Madhya%20Pradesh%20466116!5e0!3m2!1sen!2sin!4v1648571247767!5m2!1sen!2sin\" allowFullScreen=\"\" loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n\r\n                <form action=\"https://formspree.io/f/myyobgvy\" method=\"POST\">\r\n                    <h3>Feedback form</h3>\r\n                    <input type=\"text\" placeholder=\"your name\" className=\"box\" name='name'/>\r\n                        <input type=\"email\" placeholder=\"your email\" className=\"box\" name='email'/>\r\n                            <input type=\"tel\" placeholder=\"subject\" className=\"box\" name='tel'/>\r\n                                <textarea placeholder=\"your feedback\" className=\"box\" cols=\"30\" rows=\"10\" name='feedback'></textarea>\r\n                                <input type=\"submit\" value=\"send feed\" className=\"btn\" name='submit'/>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ContactUs","import React from \"react\";\r\nimport { Carousel } from \"react-bootstrap\"\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Contactus from \"./contactus\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"main_home\">\r\n      <section>\r\n        <Carousel>\r\n          <Carousel.Item interval={1000}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./image/park/1.png\"\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./image/park/2.png\"\r\n              alt=\"Second slide\"\r\n            />\r\n            <Carousel.Caption>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./image/park/3.png\"\r\n              alt=\"Third slide\"\r\n            />\r\n            <Carousel.Caption>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n\r\n      </section>\r\n      <Link to=\"/book\"><Button className=\"btn home-parallax\">Book Slot</Button></Link>\r\n      <section class=\"services\" id=\"services\">\r\n\r\n        <h1 class=\"heading\"> our <span>services</span> </h1>\r\n\r\n        <div class=\"box-container\">\r\n\r\n          <div class=\"box\">\r\n            <i class=\"fas fa-car\"></i>\r\n            <h3>Cleaning services</h3>\r\n            <p>Places that can make your vehicle clean and shiny.</p>\r\n            <a href=\"#\" class=\"btn\"> read more</a>\r\n          </div>\r\n\r\n          <div class=\"box\">\r\n            <i class=\"fas fa-car-crash\"></i>\r\n            <h3>Car Insurance</h3>\r\n            <p>Get an insurance for your as well as your vehicle's safety and make each drive a safe one. </p>\r\n            <a href=\"#\" class=\"btn\"> read more</a>\r\n          </div>\r\n\r\n          <div class=\"box\">\r\n            <i class=\"fas fa-car-battery\"></i>\r\n            <h3>Accessories</h3>\r\n            <p>Add accesories to your vehicle to get a better driving experience.</p>\r\n            <a href=\"#\" class=\"btn\"> read more</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"contact\" id=\"contact\">\r\n          <Contactus/>\r\n        </div>\r\n\r\n      </section>\r\n      \r\n\r\n\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <section>\r\n      <Row noGutters className=\"text-center align-items-center pizza-cta\">\r\n        <Col>\r\n          <p className=\"looking-for-pizza\">\r\n            If you're looking for free parking slot\r\n          </p>\r\n          <Button\r\n            color=\"none\"\r\n            className=\"book-table-btn\"\r\n            onClick={_ => {\r\n              props.setPage(1);\r\n            }}\r\n          >\r\n            Book a slot\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row noGutters className=\"text-center big-img-container\">\r\n        <Col>\r\n          <img\r\n            src={require(\"../images/cafe.jpg\")}\r\n            alt=\"cafe\"\r\n            className=\"big-img\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Table from \"./Table\";\r\n\r\nexport default props => {\r\n  const navigation = useNavigate();\r\n  \r\n  const [totalTables, setTotalTables] = useState([]);\r\n\r\n  // User's selections\r\n  const [selection, setSelection] = useState({\r\n    table: {\r\n      name: null,\r\n      id: null\r\n    },\r\n    date: new Date(),\r\n    time: null,\r\n    location: \"Any Location\",\r\n    size: 0\r\n  });\r\n\r\n  // User's booking details\r\n  const [booking, setBooking] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  // List of potential locations\r\n  const [locations] = useState([ \"A\", \"B\", \"C\"]);\r\n  const [times] = useState([\r\n    \"9AM\",\r\n    \"10AM\",\r\n    \"11AM\",\r\n    \"12PM\",\r\n    \"1PM\",\r\n    \"2PM\",\r\n    \"3PM\",\r\n    \"4PM\",\r\n    \"5PM\"\r\n  ]);\r\n  // Basic reservation \"validation\"\r\n  const [reservationError, setReservationError] = useState(false);\r\n\r\n  const getDate = _ => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    const date =\r\n      months[selection.date.getMonth()] +\r\n      \" \" +\r\n      selection.date.getDate() +\r\n      \" \" +\r\n      selection.date.getFullYear();\r\n    let time = selection.time.slice(0, -2);\r\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\r\n    console.log(time);\r\n    const datetime = new Date(date + \" \" + time);\r\n    return datetime;\r\n  };\r\n\r\n  const getEmptyTables = _ => {\r\n    let tables = totalTables.filter(table => table.isAvailable);\r\n    return tables.length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check availability of tables from DB when a date and time is selected\r\n    if (selection.time && selection.date) {\r\n      (async _ => {\r\n        let datetime = getDate();\r\n        let res = await fetch(\"/api/v1/availability\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            date: datetime\r\n          })\r\n        });\r\n        res = await res.json();\r\n        // Filter available tables with location and group size criteria\r\n        let tables = res.tables.filter(\r\n          table =>\r\n            (selection.size > 0 ? table.capacity >= selection.size : true) &&\r\n            (selection.location !== \"A\" \r\n              ? table.location === selection.location\r\n              : true)\r\n        );\r\n        setTotalTables(tables);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selection.time, selection.date, selection.size, selection.location]);\r\n\r\n  // Make the reservation if all details are filled out\r\n  const reserve = async _ => {\r\n    if (\r\n      (booking.name.length === 0) |\r\n      (booking.phone.length === 0) |\r\n      (booking.email.length === 0)\r\n    ) {\r\n      console.log(\"Incomplete Details\");\r\n      setReservationError(true);\r\n    } else {\r\n      const datetime = getDate();\r\n      let res = await fetch(\"/api/v1/reserve\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          ...booking,\r\n          date: datetime,\r\n          table: selection.table.id\r\n        })\r\n      });\r\n      res = await res.text();\r\n      console.log(\"Reserved: \" + res);\r\n      navigation('/thankyou')\r\n      \r\n    }\r\n  };\r\n\r\n  // Clicking on a table sets the selection state\r\n  const selectTable = (table_name, table_id) => {\r\n    setSelection({\r\n      ...selection,\r\n      table: {\r\n        name: table_name,\r\n        id: table_id\r\n      }\r\n    });\r\n  };\r\n\r\n  // Generate party size dropdown\r\n  const getSizes = _ => {\r\n    let newSizes = [];\r\n\r\n    for (let i = 1; i < 8; i++) {\r\n      newSizes.push(\r\n        <DropdownItem\r\n          key={i}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={e => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              size: i\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {i}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return newSizes;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getLocations = _ => {\r\n    let newLocations = [];\r\n    locations.forEach(loc => {\r\n      newLocations.push(\r\n        <DropdownItem\r\n          key={loc}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={_ => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              location: loc\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {loc}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newLocations;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getTimes = _ => {\r\n    let newTimes = [];\r\n    times.forEach(time => {\r\n      newTimes.push(\r\n        <DropdownItem\r\n          key={time}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={_ => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              time: time\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {time}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newTimes;\r\n  };\r\n\r\n  // Generating tables from available tables state\r\n  const getTables = _ => {\r\n    console.log(\"Getting tables\");\r\n    if (getEmptyTables() > 0) {\r\n      let tables = [];\r\n      totalTables.forEach(table => {\r\n        if (table.isAvailable) {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              empty\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        } else {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      return tables;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center align-items-center pizza-cta\">\r\n        <Col>\r\n          <p className=\"looking-for-pizza\">\r\n            {!selection.table.id ? \"Book a Table\" : \"Confirm Reservation\"}\r\n            <i\r\n              className={\r\n                !selection.table.id\r\n                  ? \"fas fa-chair pizza-slice\"\r\n                  : \"fas fa-clipboard-check pizza-slice\"\r\n              }\r\n            ></i>\r\n          </p>\r\n          <p className=\"selected-table\">\r\n            {selection.table.id\r\n              ? \"You are booking table \" + selection.table.name\r\n              : null}\r\n          </p>\r\n\r\n          {reservationError ? (\r\n            <p className=\"reservation-error\">\r\n              * Please fill out all of the details.\r\n            </p>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      {!selection.table.id ? (\r\n        <div id=\"reservation-stuff\">\r\n          <Row noGutters className=\"text-center align-items-center\">\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <input\r\n                type=\"date\"\r\n                required=\"required\"\r\n                className=\"booking-dropdown\"\r\n                value={selection.date.toISOString().split(\"T\")[0]}\r\n                onChange={e => {\r\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table\r\n                      },\r\n                      date: new Date(e.target.value)\r\n                    };\r\n                    setSelection(newSel);\r\n                  } else {\r\n                    console.log(\"Invalid date\");\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table\r\n                      },\r\n                      date: new Date()\r\n                    };\r\n                    setSelection(newSel);\r\n                  }\r\n                }}\r\n              ></input>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.time === null ? \"Select a Time\" : selection.time}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getTimes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.location}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getLocations()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"tables-display\">\r\n            <Col>\r\n              {getEmptyTables() > 0 ? (\r\n                <p className=\"available-tables\">{getEmptyTables()} available</p>\r\n              ) : null}\r\n\r\n              {selection.date && selection.time ? (\r\n                getEmptyTables() > 0 ? (\r\n                  <div>\r\n                    <div className=\"table-key\">\r\n                      <span className=\"empty-table\"></span> &nbsp; Available\r\n                      &nbsp;&nbsp;\r\n                      <span className=\"full-table\"></span> &nbsp; Unavailable\r\n                      &nbsp;&nbsp;\r\n                    </div>\r\n                    <Row noGutters>{getTables()}</Row>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"table-display-message\">No Available Slots</p>\r\n                )\r\n              ) : (\r\n                <p className=\"table-display-message\">\r\n                  Please select a date and time for your booking.\r\n                </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div id=\"confirm-reservation-stuff\">\r\n          <Row\r\n            noGutters\r\n            className=\"text-center justify-content-center reservation-details-container\"\r\n          >\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Name\"\r\n                className=\"reservation-input\"\r\n                value={booking.name}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    name: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Phone Number\"\r\n                className=\"reservation-input\"\r\n                value={booking.phone}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    phone: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Email\"\r\n                className=\"reservation-input\"\r\n                value={booking.email}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    email: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                color=\"none\"\r\n                className=\"book-table-btn\"\r\n                onClick={_ => {\r\n                  reserve();\r\n                }}\r\n              >\r\n                Book Now\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport default _ => {\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center\">\r\n        <Col>\r\n          <p className=\"thanks-header\">Thank You!</p>\r\n    \r\n          <p className=\"thanks-subtext\">\r\n            You should receive an email with the details of your reservation.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style/index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route,Routes } from \"react-router-dom\"\r\nimport Navbar from \"./components/navbar\";\r\nimport Footer from \"./components/footer\";\r\nimport \"./app.css\"\r\nimport Table from \"./components/Table\";\r\nimport Home from \"./components/home\";\r\nimport Main from \"./components/main\";\r\nimport Book from \"./components/book\";\r\nimport ThankYou from \"./components/thankYou\";\r\n\r\n// import Navbar from \"./components/navbar\";\r\n\r\nexport default _ => {\r\n   const [page, setPage] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navbar setPage={setPage} />\r\n      \r\n      <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home/>}></Route>\r\n          <Route exact path=\"/table\" element={<Table/>}></Route>\r\n          <Route exact path=\"/book\" element={<Book/>}></Route>\r\n          <Route exact path=\"/thankyou\" element={<ThankYou/>}></Route>\r\n\r\n        </Routes>\r\n\r\n      </Router>\r\n      <Footer/>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}